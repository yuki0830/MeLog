@using MarkdownSharp
@model Melog.Models.IndexViewModels

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - マイ ASP.NET アプリケーション</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>
    <script type="text/javascript" src="~/Libs/honoka/js/bootstrap.js"></script>
    <script type="text/javascript" src="~/Libs/syntaxhighlighter_3.0.83/scripts/shCore.js"></script>
    <script type="text/javascript" src="~/Libs/syntaxhighlighter_3.0.83/scripts/shBrushCSharp.js"></script>
    <link type="text/css" rel="stylesheet" href="~/Libs/syntaxhighlighter_3.0.83/styles/shCoreDefault.css" />
    <script type="text/javascript">SyntaxHighlighter.all();</script>
    <script src="~/Scripts/marked.js"></script>
    <script src="~/Libs/highlight/highlight.pack.js"></script>
    <script src="~/Scripts/editor.js"></script>
    <link rel="stylesheet" href="~/Content/icono.min.css" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
</head>
<body>
    <div class="header-block">
        <div class="site-name"><a href="/" class="site-link">Giita</a></div>
        <a href="/Article/Edit" class="new-article-btn">
            <div class="icono-file btn-wrapper"></div>
            <p class="new-article-label">新しい記事を書く</p>
        </a>
    </div>
    <div class="content-block">
        <div class="title-block">
            <div class="title-format">@Model.ArticleView.Title</div>
            <div class="date-format">作成日：@Model.ArticleView.CreatedAt.ToString("yyyy/MM/dd")</div>
            @if (Model.ArticleView.UpdatedAt != null)
            {
                <div class="date-format">最終更新日：@Model.ArticleView.UpdatedAt?.ToString("yyyy/MM/dd")</div>
            }
            @if (Model.ArticleView.Categories.Count > 0)
            {
                <ul class="categories">
                    @for (var i = 0; i < Model.ArticleView.Categories.Count; i++)
                    {
                        <li class="category">@Model.ArticleView.Categories[i]</li>
                    }
                </ul>
            }
        </div>
        <div class="main-block">
            <div class="left-area">@Html.Raw(new Markdown().Transform(Model.ArticleView.Description))</div>
            <div class="right-area">
                <div class="past-articles">
                    @if(Model.PastArticleListView != null)
                    {
                        foreach(var index in Model.PastArticleListView.PastArticleList)
                        {
                            <p>@index.Key</p>
                            <ul>
                                @{ 
                                    foreach(var article in index.Value)
                                    {
                                        <li>
                                            <a href="/Article/Specify?articleId=@article.Item3">
                                                <p>@article.Item1</p>
                                                <p>@article.Item2</p>
                                            </a>
                                        </li>
                                    }
                                }
                            </Ul>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="footer-block">
        <div class="copyright">Copyright © 2016 UK All Rights Reserved.</div>
    </div>
</body>
</html>
